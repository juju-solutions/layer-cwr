<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.24.0">
      <projectUrl>{{gitrepo}}</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.0.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        {{refspec}}
        <url>{{gitrepo}}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>{{branch}}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>*/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
if [ ! -f "first-run.lock" ]; then
  touch "first-run.lock"
  echo "First run automaticaly triggered. Skipped."
  exit 0
fi

export JUJU_REPOSITORY=&quot;/tmp/&quot;
OUTPUT_DIR="builds"
SERIES_FLAG=""
if [ ! -z "{{series}}" ]
then
    OUTPUT_DIR="{{series}}"
    SERIES_FLAG="--series {{series}}"
fi

charm build $SERIES_FLAG

juju switch {{controller}}

# we have to figure out which credential to use because of:
# https://bugs.launchpad.net/juju/+bug/1652171
cloud=$(juju add-model wont-be-added --credential invalid-credential 2>&amp;1 | sed -e 's/.*cloud "\?\([^ "]*\)"\?.*/\1/')
credential_arg=""
if [[ "$cloud" != "localhost" &amp;&amp; "$cloud" != "lxd" ]]; then
    if ! juju credentials --format=json | grep -q $cloud; then
        echo 'This cloud requires a credential which was not found.'
        echo 'Please use set-credentials to add the credential.'
        exit 1
    fi
    JUJU_CREDENTIAL=$(juju credentials --format=json | jq -r '.credentials.'${cloud}'."cloud-credentials" | keys[0]')
    credential_arg="--credential=$JUJU_CREDENTIAL"
 fi
juju add-model test-{{charmname}}-$BUILD_NUMBER $credential_arg

if [ -z "{{referencebundle}}" ]
then
    bundletester -e {{controller}}:test-{{charmname}}-$BUILD_NUMBER \
      -vFt /tmp/$OUTPUT_DIR/{{charmname}}
else
    juju deploy -m {{controller}}:test-{{charmname}}-$BUILD_NUMBER \
      /tmp/$OUTPUT_DIR/{{charmname}} {{bundleappname}} $SERIES_FLAG
    bundletester -e {{controller}}:test-{{charmname}}-$BUILD_NUMBER \
      -vFt {{referencebundle}} --bundle bundle.yaml
fi

if [ ! -z "{{pushtochannel}}" ]
then
     CHARM_LOCATION=`charm push /tmp/$OUTPUT_DIR/{{charmname}} cs:~{{lpid}}/{{charmname}} | head -1 | awk '{print $2}'`
     charm release $CHARM_LOCATION --channel={{pushtochannel}}
     charm grant $CHARM_LOCATION everyone --channel={{pushtochannel}}
fi
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>juju destroy-model test-{{charmname}}-$BUILD_NUMBER -y</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
  </publishers>
  <buildWrappers/>
</project>
