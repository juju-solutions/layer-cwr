#!/usr/bin/env python3

import subprocess
import sys

sys.path.append('lib')
from charms.layer.basic import activate_venv  # noqa: E402
activate_venv()

from cwrhelpers import wait_result  # noqa: E402
from charmhelpers.core import hookenv  # noqa: E402
from charms.reactive import RelationBase  # noqa: E402
from jenkins import Jenkins  # noqa: E402


def register_controller():
    '''
    Register a controller. A call to the Jenkins interface is performed
    to trigger the RegisterController job. This job will wait for one minute
    for the job to complete.
    '''
    jenkins_relation = (RelationBase.from_state('jenkins.available'))
    jenkins_connection_info = jenkins_relation.get_connection_info()
    jclient = Jenkins(jenkins_connection_info["jenkins_url"],
                      jenkins_connection_info["admin_username"],
                      jenkins_connection_info["admin_password"])

    token = hookenv.action_get("token")
    name = hookenv.action_get("name")

    next_build_number = jclient.get_job_info("RegisterController")['nextBuildNumber']
    params = {'REGISTER_STRING': token,
              'CONTROLLER_NAME': name}
    jclient.build_job("RegisterController",  params)

    build_outcome, build_output = wait_result(jclient, "RegisterController", next_build_number)
    hookenv.action_set({'outcome': build_outcome})
    hookenv.action_set({"output": build_output})
    subprocess.call(["hooks/update-status"])


if __name__ == "__main__":
    register_controller()
