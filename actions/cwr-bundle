#!/usr/bin/env python3
from os import getcwd
import sys

sys.path.append('lib')
from charms.layer.basic import activate_venv  # noqa: E402
activate_venv()

from charmhelpers.core import hookenv  # noqa: E402
import cwrhelpers  # noqa: E402
from utils import (
    get_fname,
    get_output_scenarios
)  # noqa: E402


def add_job():
    """Adds a job to be triggered upon a commit on github."""
    jclient = cwrhelpers.make_jenkins_client()

    repo = hookenv.action_get("repo")
    bundle_name = hookenv.action_get("bundle-name")
    bundle_fname = get_fname(bundle_name)
    branch = hookenv.action_get("branch")
    controller = hookenv.action_get("controller")
    charm_home = getcwd()

    # This job will "build" the bundle aka update, test, push to store
    job_name = 'cwr_bundle_{}'.format(bundle_fname)
    s3_creds, s3_creds_container = cwrhelpers.get_s3_creds_filenames(job_name)
    s3_options = cwrhelpers.get_s3_options(s3_creds, s3_creds_container)
    context = {
        "repo": repo,
        "bundle_subdir": hookenv.action_get("bundle-subdir"),
        "bundle_name": bundle_name,
        "controller": controller or "",
        "branch": branch,
        "cwr_charm_home": charm_home,
        "output_scenarios": get_output_scenarios(),
        "s3_options": s3_options
    }
    token = cwrhelpers.create_jenkins_job(
        jenkins_client=jclient, source="BuildMyBundle/config-build.xml",
        context=context, job_name=job_name)

    url, badge_url = cwrhelpers.get_info_urls('trigger', token, job_name)
    hookenv.action_set({'hook.url': url})
    hookenv.action_set({'build.badge': badge_url})


if __name__ == "__main__":
    add_job()
