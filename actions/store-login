#!/usr/bin/env python3

import base64
import errno
import os
import subprocess
import sys

sys.path.append('lib')
from charms.layer.basic import activate_venv  # noqa: E402
activate_venv()

from charmhelpers.core.host import chownr  # noqa: E402
from charmhelpers.core import hookenv  # noqa: E402
from utils import report_status


USER = "jenkins"
GROUP = "jenkins"
HOME = "/var/lib/jenkins"


def charmstore_login():
    """
    Login to the charmstore.

    As long as we have an oauth token (which will be passed in via this action),
    `charm login` should be non-interactive, creating/refreshing ~/.go-cookies
    as necessary. (shamelessly stolen from review-queue app)
    """
    token_path = "{}/.local/share/juju/store-usso-token".format(HOME)
    if not os.path.exists(token_path):
        token_value = hookenv.action_get('charmstore-usso-token')
        if not token_value:
            raise ValueError('Missing USSO token')
        if not os.path.isdir(os.path.dirname(token_path)):
            try:
                os.makedirs(os.path.dirname(token_path))
            except OSError as e:
                if e.errno == errno.EEXIST:
                    pass
                else:
                    raise
        with open(token_path, 'w') as f:
            f.write(base64.b64decode(token_value).decode('utf-8'))
        os.chmod(token_path, 0o600)
    chownr('{}/.local'.format(HOME), USER, GROUP, chowntopdir=True)
    cmd = ['su', USER, '-c', 'charm login']
    if subprocess.call(cmd) != 0:
        raise Exception
    report_status()

if __name__ == "__main__":
    charmstore_login()
